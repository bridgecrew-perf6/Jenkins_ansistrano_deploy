version: "3.7"
# --------- #
# Services  #
# --------- #
services:
  ########
  # BASE #
  ########
  base:
    build:
      context: "${ECDOCK_ROOT}/docker/base/IP"
    image: ecdock/centos7-base
    container_name: ${COMPOSE_PROJECT_NAME}_ip_centos7-base
    networks:
      - internal

  ######################
  # Nginx Application  #
  ######################
  web:
    build:
      context: ../
      dockerfile: docker/apache/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_web
    restart: always
    ports:
      - "${WEB_HOST_HTTP_PORT}:80"
      - "${WEB_HOST_HTTPS_PORT}:443"
    privileged: true
    networks:
      internal:
        priority: 100
      proxy:
        priority: 1000
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /etc/localtime:/etc/localtime:ro
      - ${PROJECT_ROOT}/:/home/eclass
      - ${ECDOCK_ROOT}/scripts:/root/scripts
      - ip-db-data:/var/lib/mysql
    environment:
      HOST_USER_ID:  ${HOST_USER}
      HOST_GROUP_ID: ${HOST_GROUP}
    security_opt:
      - no-new-privileges:true
    labels:
      # Enable this container to be mapped by traefik
      # For more information, see: https://docs.traefik.io/providers/docker/#exposedbydefault
      - "traefik.enable=true"
      # URL to reach this container
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_web.rule=Host(`${PROJECT_URL}`)"
      # Activation of TLS
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_web.tls=true"
      # If port is different than 80, use the following service:
      # - "traefik.http.services.<service_name>.loadbalancer.server.port=<port>"
      - "traefik.docker.network=ecdock-proxy"

  ############
  # Crossbar #
  ############
  crossbar:
    build:
      context: "${ECDOCK_ROOT}/docker/crossbar"
      args:
        FILE_OWNER: ${FILE_OWNER}
    container_name: ${COMPOSE_PROJECT_NAME}_crossbar
    restart: always
    privileged: true
    extra_hosts:
      - "${EXTRA_HOST}:172.168.0.1" 
    ports:
      - "${CROSSBAR_PORT}:6060"
    depends_on:
      - web
    networks:
      internal:
        priority: 100
      proxy:
        priority: 1000
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /etc/localtime:/etc/localtime:ro
      - ${POWERLESSON_PATH}:/home/powerlesson

# --------- #
# Networks  #
# --------- #
networks:
  internal:
  proxy:
    external: true
    name: ecdock-proxy
# ------- #
# Volumes #
# ------- #
volumes:
  ip-db-data: